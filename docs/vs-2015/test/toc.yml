- name: Verbessern der Codequalität
  items:
    - name: Komponententest für Code
      items:
        - name: Komponententest für Code
          href: unit-test-your-code.md
        - name: Grundlagen zum Komponententest
          href: unit-test-basics.md
        - name: Ein Komponententestprojekt erstellen
          href: create-a-unit-test-project.md
        - name: Generieren von Komponententests für Code mit IntelliTest
          href: generate-unit-tests-for-your-code-with-intellitest.md
        - name: Installieren von Frameworks für Komponententests von Drittanbietern
          href: install-third-party-unit-test-frameworks.md
        - name: Upgrade der Komponententestprojekte von Visual Studio 2010
          href: upgrade-visual-studio-2010-unit-test-projects.md
        - name: Ausführen von Komponententests mit dem Test-Explorer
          items:
            - name: Ausführen von Komponententests mit dem Test-Explorer
              href: run-unit-tests-with-test-explorer.md
            - name: Ausführen eines Komponententest als 64-Bit-Prozess
              href: run-a-unit-test-as-a-64-bit-process.md
            - name: Erstellen und Ausführen von Komponententests für Windows Store-Apps
              href: walkthrough-creating-and-running-unit-tests-for-windows-store-apps.md
        - name: Konfigurieren von Komponententests mithilfe einer .runsettings-Datei
          href: configure-unit-tests-by-using-a-dot-runsettings-file.md
        - name: Schreiben von Komponententests für .NET Framework mit dem Microsoft-Komponententestframework für verwalteten Code
          items:
            - name: Schreiben von Komponententests für .NET Framework mit dem Microsoft-Komponententestframework für verwalteten Code
              href: writing-unit-tests-for-the-dotnet-framework-with-the-microsoft-unit-test-framework-for-managed-code.md
            - name: Erstellen und Ausführen von Komponententests für verwalteten Code
              href: walkthrough-creating-and-running-unit-tests-for-managed-code.md
            - name: Testgesteuerte Entwicklung mit dem Test-Explorer
              href: quick-start-test-driven-development-with-test-explorer.md
            - name: Verwenden von Microsoft.VisualStudio.TestTools.UnitTesting-Membern in Komponententests
              href: using-microsoft-visualstudio-testtools-unittesting-members-in-unit-tests.md
            - name: Verwenden der Assert-Klassen
              href: using-the-assert-classes.md
            - name: Isolieren von getestetem Code mithilfe von Microsoft Fakes
              items:
                - name: Isolieren von getestetem Code mithilfe von Microsoft Fakes
                  href: isolating-code-under-test-with-microsoft-fakes.md
                - name: 'Verwenden von Stubs, um für Komponententests Teile der Anwendung voneinander zu trennen'
                  href: using-stubs-to-isolate-parts-of-your-application-from-each-other-for-unit-testing.md
                - name: 'Verwenden von Shims, um zu Komponententests die Anwendung von anderen Assemblys zu trennen'
                  href: using-shims-to-isolate-your-application-from-other-assemblies-for-unit-testing.md
                - name: 'Codegenerierung, Kompilierung und Benennungskonventionen in Microsoft Fakes'
                  href: code-generation-compilation-and-naming-conventions-in-microsoft-fakes.md
            - name: Erstellen eines datengesteuerten Komponententests
              items:
                - name: Erstellen eines datengesteuerten Komponententests
                  href: how-to-create-a-data-driven-unit-test.md
                - name: Verwenden einer Konfigurationsdatei zum Definieren einer Datenquelle
                  href: walkthrough-using-a-configuration-file-to-define-a-data-source.md
            - name: Komponententests für generische Methoden
              href: unit-tests-for-generic-methods.md
            - name: Entwickeln für eine frühere Version von .NET
              href: how-to-configure-unit-tests-to-target-an-earlier-version-of-the-dotnet-framework.md
            - name: Beispielprojekt zum Erstellen von Komponententests
              href: sample-project-for-creating-unit-tests.md
        - name: Schreiben von Komponententests für C/C++ mit dem Microsoft-Unittest-Framework für C++
          items:
            - name: Schreiben von Komponententests für C/C++ mit dem Microsoft-Unittest-Framework für C++
              href: writing-unit-tests-for-c-cpp-with-the-microsoft-unit-testing-framework-for-cpp.md
            - name: Hinzufügen von Komponententests zu vorhandenen C++-Anwendungen
              href: unit-testing-existing-cpp-applications-with-test-explorer.md
            - name: Verwenden von Microsoft.VisualStudio.TestTools.CppUnitTestFramework
              href: using-microsoft-visualstudio-testtools-cppunittestframework.md
        - name: Bestimmen des Umfangs des zu testenden Codes mithilfe von Code Coverage
          items:
            - name: Bestimmen des Umfangs des zu testenden Codes mithilfe von Code Coverage
              href: using-code-coverage-to-determine-how-much-code-is-being-tested.md
            - name: Anpassen der Code Coverage-Analyse
              href: customizing-code-coverage-analysis.md
            - name: Analysieren von Codeabdeckung in Buildüberprüfungstests
              href: analyzing-code-coverage-in-build-verification-tests.md
            - name: Problembehandlung bei der Code Coverage
              href: troubleshooting-code-coverage.md
        - name: Verwenden Emulatoren zum Insolieren von SharePoint 2010-Komponententests
          href: using-emulators-to-isolate-unit-tests-for-sharepoint-2010-applications.md
    - name: 'Verwenden von Benutzeroberflächenautomatisierung zum Testen des Codes '
      items:
        - name: 'Verwenden von Benutzeroberflächenautomatisierung zum Testen des Codes '
          href: use-ui-automation-to-test-your-code.md
        - name: 'Erstellen, Bearbeiten und Verwalten eines Tests der programmierten Benutzeroberfläche'
          href: walkthrough-creating-editing-and-maintaining-a-coded-ui-test.md
        - name: Testen von Apps von Windows UWP- und 8.1-Store-Apps mit Tests der programmierten UI
          href: test-windows-store-8-1-apps-with-coded-ui-tests.md
        - name: Testen von Windows UWP- und 8.1 -Phone-Apps mit Tests der programmierten UI
          href: test-windows-phone-8-1-apps-with-coded-ui-tests.md
        - name: Festlegen einer eindeutigen Automatisierungseigenschaft für Windows Store-Steuerelemente für Tests
          href: set-a-unique-automation-property-for-windows-store-controls-for-testing.md
        - name: Verwenden von HTML5-Steuerelementen in Tests der programmierten UI
          href: using-html5-controls-in-coded-ui-tests.md
        - name: Testen von SharePoint 2010-Anwendungen mit Tests der programmierten UI
          href: testing-sharepoint-2010-applications-with-coded-ui-tests.md
        - name: Erstellen eines datengesteuerten Tests der programmierten UI
          href: creating-a-data-driven-coded-ui-test.md
        - name: 'Festlegen, dass bei Wiedergabe von Tests der programmierten UI auf bestimmte Ereignisse gewartet wird'
          href: making-coded-ui-tests-wait-for-specific-events-during-playback.md
        - name: Verwenden verschiedener Webbrowser mit Tests der programmierten UI
          href: using-different-web-browsers-with-coded-ui-tests.md
        - name: Bearbeiten von Tests der programmierten UI mithilfe des Editors für Tests der programmierten UI
          href: editing-coded-ui-tests-using-the-coded-ui-test-editor.md
        - name: Analysieren von Tests der programmierten UI mithilfe der Testprotokolle der programmierten UI
          href: analyzing-coded-ui-tests-using-coded-ui-test-logs.md
        - name: Anatomy of a Coded UI Test
          href: anatomy-of-a-coded-ui-test.md
        - name: Empfohlene Vorgehensweisen für Tests der programmierten UI
          href: best-practices-for-coded-ui-tests.md
        - name: Testen einer großen Anwendung mit mehreren UI-Zuordnungen
          href: testing-a-large-application-with-multiple-ui-maps.md
        - name: Aktivieren von Tests der programmierten UI Ihrer Steuerelemente
          href: enable-coded-ui-testing-of-your-controls.md
        - name: Unterstützte Konfigurationen und Plattformen für Tests der programmierten UI und Aktionsaufzeichnungen
          href: supported-configurations-and-platforms-for-coded-ui-tests-and-action-recordings.md
        - name: Erweitern von Tests der codierten UI-Tests und Aktionsaufzeichnungen zur Unterstützung von Microsoft Excel
          items:
            - name: Erweitern von Tests der codierten UI-Tests und Aktionsaufzeichnungen zur Unterstützung von Microsoft Excel
              href: extending-coded-ui-tests-and-action-recordings-to-support-microsoft-excel.md
            - name: Sample Excel Add-In for Coded UI Testing
              href: sample-excel-add-in-for-coded-ui-testing.md
            - name: Beispiel für Excel-Communicator-Schnittstelle
              href: sample-excel-communicator-interface.md
            - name: Beispielerweiterung für Tests der programmierten Benutzeroberfläche für Excel
              items:
                - name: Beispielerweiterung für Tests der programmierten Benutzeroberfläche für Excel
                  href: sample-coded-ui-test-extension-for-excel.md
                - name: ExtensionPackage Class
                  href: sample-excel-extension-extensionpackage-class.md
                - name: TechnologyManager Class
                  href: sample-excel-extension-technologymanager-class.md
                - name: PropertyProvider-Klasse
                  href: sample-excel-extension-propertyprovider-class.md
                - name: Element Classes
                  href: sample-excel-extension-element-classes.md
                - name: ActionFilter Class
                  href: sample-excel-extension-actionfilter-class.md
        - name: Upgrade der Tests der programmierten UI von Visual Studio 2010
          href: upgrading-coded-ui-tests-from-visual-studio-2010.md
    - name: Analysieren der Anwendungsqualität
      href: ../code-quality/analyzing-application-quality-by-using-code-analysis-tools.md
    - name: Problembehandlung für Qualitätstools
      items:
        - name: Problembehandlung für Qualitätstools
          href: troubleshooting-quality-tools.md
        - name: Problembehandlung für Codeanalysefehler
          href: troubleshooting-code-analysis-issues.md
        - name: Problembehandlung für Codemetrikfehler
          href: troubleshooting-code-metrics-issues.md
    - name: Testen von Store-Apps mit Visual Studio
      items:
        - name: Testen von Store-Apps mit Visual Studio
          href: testing-store-apps-with-visual-studio.md
        - name: Erstellen und Ausführen von Komponententests
          items:
            - name: Erstellen und Ausführen von Komponententests
              href: create-and-run-unit-tests-for-a-store-app-in-visual-studio.md
            - name: Komponententest bei einer C++-DLL
              href: unit-testing-a-visual-cpp-dll-for-store-apps.md
            - name: Komponententest von C#-Code
              href: unit-testing-visual-csharp-code-in-a-store-app.md
            - name: Ausführen von Komponententests im Test-Explorer
              href: run-unit-tests-for-store-apps-in-visual-studio.md
        - name: Analysieren der Codequalität mit der statischen Codeanalyse
          items:
            - name: Analysieren der Codequalität mit der statischen Codeanalyse
              href: analyze-the-code-quality-of-store-apps-using-visual-studio-static-code-analysis.md
            - name: Analysieren der Qualität von Visual Basic- und C#-Code
              href: analyze-visual-basic-and-csharp-code-quality-in-store-apps-using-visual-studio-static-code-analysis.md
            - name: Analysieren der Qualität von C++-Code
              href: analyze-cpp-code-quality-of-store-apps-using-visual-studio-static-code-analysis.md